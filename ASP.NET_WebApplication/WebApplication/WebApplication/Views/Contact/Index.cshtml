@model IEnumerable<WebApplication.Models.ContactMessage>

@{
    ViewBag.Title = "Index";
}

<h2>Contact Messages</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

<form method="get" class="mb-3">
    <div class="input-group">
        <input type="text" name="search" class="form-control" placeholder="Search..." value="@ViewBag.Search" />
        <button type="submit" class="btn btn-success">Search</button>
    </div>
</form>
<table class="table table-success table-striped table-bordered">
    <tr class="table-success">
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Message)
        </th>
        <th>
            Date
        </th>
        <th> Actions</th>
    </tr>

    @foreach (var item in Model)
    {
        <tr class="table-secondary">
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Message)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateMessage)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @*@Html.ActionLink("Details", "Details", new { id = item.Id }) |*@
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }

</table>

<nav>
    <ul class="pagination">
        @for (int i = 1; i <= ViewBag.TotalPages; i++)
        {
            <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                <a class="page-link" href="?search=@ViewBag.Search&page=@i">@i</a>
            </li>
        }
    </ul>
</nav>



<div style="display: flex; justify-content: center; align-items: center; height: 50vh;">
    <canvas id="myChart"></canvas>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    fetch('/Contact/Contact/ChartData')
        .then(res => res.json())
        .then(data => {
            debugger;
            const labels = data.map(item => item.Date);
            const counts = data.map(item => item.Count);

            new Chart(document.getElementById('myChart'), {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Messages per Day',
                        data: counts,
                        backgroundColor: 'rgba(119, 86, 82, 0.6)'
                    }]
                },
                options: {
                    scales: {
                        y: { beginAtZero: true }
                    }
                }
            });
        });
</script>



